GrowingPacker=function(){},GrowingPacker.prototype={fit:function(t){var e,i,r,n=t.length,a=n>0?t[0].w:0,o=n>0?t[0].h:0;for(this.root={x:0,y:0,w:a,h:o},e=0;n>e;e++)r=t[e],(i=this.findNode(this.root,r.w,r.h))?r.fit=this.splitNode(i,r.w,r.h):r.fit=this.growNode(r.w,r.h)},findNode:function(t,e,i){return t.used?this.findNode(t.right,e,i)||this.findNode(t.down,e,i):e<=t.w&&i<=t.h?t:null},splitNode:function(t,e,i){return t.used=!0,t.down={x:t.x,y:t.y+i,w:t.w,h:t.h-i},t.right={x:t.x+e,y:t.y,w:t.w-e,h:i},t},growNode:function(t,e){var i=t<=this.root.w,r=e<=this.root.h,n=r&&this.root.h>=this.root.w+t,a=i&&this.root.w>=this.root.h+e;return n?this.growRight(t,e):a?this.growDown(t,e):r?this.growRight(t,e):i?this.growDown(t,e):null},growRight:function(t,e){return this.root={used:!0,x:0,y:0,w:this.root.w+t,h:this.root.h,down:this.root,right:{x:this.root.w,y:0,w:t,h:this.root.h}},(node=this.findNode(this.root,t,e))?this.splitNode(node,t,e):null},growDown:function(t,e){return this.root={used:!0,x:0,y:0,w:this.root.w,h:this.root.h+e,down:{x:0,y:this.root.h,w:this.root.w,h:e},right:this.root},(node=this.findNode(this.root,t,e))?this.splitNode(node,t,e):null}},!function(){for(var t,e,r={version:"1.0.0"},n=["ms","moz","webkit","o"],a=0;a<n.length&&!window.requestAnimationFrame;++a)t=window[n[a]+"RequestAnimationFrame"],e=window[n[a]+"CancelAnimationFrame"]||window[n[a]+"CancelRequestAnimationFrame"];if(!t){var o=0;t=function(t,e){var i=(new Date).getTime(),r=Math.max(0,16-(i-o)),n=window.setTimeout(function(){t(i+r)},r);return o=i+r,n}}e||(e=function(t){clearTimeout(t)});var s=function(){return this.pixelRatio||function(){var t=2,e=document.createElement("canvas").getContext("2d"),i=window.devicePixelRatio||1,r=e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1;return i/r*t}()},h=function(t,e,i){i=i||s();var r=document.createElement("canvas");return r.width=t*i,r.height=e*i,r.style.width=t+"px",r.style.height=e+"px",r.getContext("2d").setTransform(i,0,0,i,0,0),r},c=function(t,e){console.error(t+": "+e)};BLOTTER.TextDescription=function(t){function e(){var e=[0,0,0,0],i=(t.padding||"").match(/\d+\w*/);if(i)switch(i=i.slice(0,4),i.length){case 1:var r=i[0];e=[r,r,r,r];break;case 2:var n=i[0],a=i[1];e=[n,a,n,a];break;case 3:var o=i[0],a=i[1],s=i[2];e=[o,a,s,a];break;default:var o=i[0],h=i[1],s=i[2],c=i[3];e=[o,h,s,c]}return e}var i=e();return t.paddingTop=t.paddingTop||i[0],t.paddingRight=t.paddingRight||i[1],t.paddingBottom=t.paddingBottom||i[2],t.paddingLeft=t.paddingLeft||i[3],{fontFamily:t.fontFamily,fontSize:t.fontSize,paddingTop:t.paddingTop,paddingRight:t.paddingRight,paddingBottom:t.paddingBottom,paddingLeft:t.paddingLeft,lineHeight:t.lineHeight,fillStyle:t.color}},blotter_getTextSize=function(t,e,i){var r,n=document.createElement("p");return n.innerHTML=t,n.style.fontFamily=e,n.style.fontSize=i,n.style.visibility="hidden",n.style.display="inline-block",document.body.appendChild(n),r={w:$(n).width(),h:$(n).height()},document.body.removeChild(n),r};var d=function(t,e){this.init.apply(this,arguments)};d.prototype={init:function(t,e){t instanceof BLOTTER.TextDescription||c("blotter_textureMapper","second argument must be of type Blotter.TextDescription"),this.textDescriber=t,this.texts={},this.textsKeys=[],this.addTexts(e)},addTexts:function(t){this.updateTexts(t,function(t){-1==this.textsKeys.indexOf(t)&&(this.texts[t]=this.textSizeForText(t))})},removeTexts:function(t){this.updateTexts(t,function(t){-1!=this.textsKeys.indexOf(t)&&delete this.texts[t]})},updateTexts:function(t,e){("string"==typeof t||t instanceof String)&&(t=[t]);for(var i=0;i<t.length;t++)e.apply(this,[t[i]]);this.textsKeys=Object.keys(this.texts),this.determineTextsMapping()},textSizeForText:function(t){var e=blotter_getTextSize(t,this.textDescriber.fontFamily,this.textDescriber.fontSize);return e.w+=this.textDescriber.paddingLeft+this.textDescriber.paddingRight,e.h+=this.textDescriber.paddingTop+this.textDescriber.paddingBottom,e},determineTextsMapping:function(){var t=this,e=new GrowingPacker,i=this.textsKeys.map(function(e){var i=t.texts[e];return i.key=e,i},t).sort(this.sortTexts);e.fit(i);for(var r in this.texts){var n=this.texts[r];t.texts[n.key]=n,delete n.key}var a=this.nearestPowerOfTwo(Math.max(e.root.w,e.root.h));this.width=a,this.height=a},sortTexts:function(t,e){var i=t.w*t.h,r=e.w*e.h;return r>i?1:i>r?-1:0},nearestPowerOfTwo:function(t){for(var e=[8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768],i=e[e.length-1],r=0;r<e.length;r++){var n=e[r+1];e[r]<t&&n>=t&&(i=n)}return i},getCanvas:function(){var t=h(this.width,this.height),e=t.getContext("2d");for(var i in this.texts){var r=this.texts[i],n=(r.h*this.textDescriber.lineHeight-r.h)/2;e.font=this.textDescriber.fontSize+" "+this.textDescriber.fontFamily,e.fillStyle=this.textDescriber.fillStyle,e.fillText(i,r.fit.x+this.textDescriber.paddingLeft,r.fit.y+this.textDescriber.paddingTop+n)}return t},getImage:function(){return this.getCanvas().toDataURL()}};var p=["precision highp float;","uniform sampler2D uSampler;","uniform sampler2D spriteIndices;","uniform sampler2D spriteDataTexture;","uniform sampler2D centerPointsTexture;","uniform float uTime;","uniform float canvasWidth;","uniform float canvasHeight;","uniform float lenseWeight;","varying vec2 vTexCoord;","void main(void) {","   vec2 aspect = vec2(canvasWidth, canvasHeight).xy;","   vec4 spriteIndexData = texture2D(spriteIndices, vTexCoord);","   float spriteIndex = spriteIndexData.x;// 0.6230769230769231;","   vec4 spriteData = texture2D(spriteDataTexture, vec2(spriteIndex, 0.5));","   // p = x, y percentage for texel position within of total resolution","   vec2 p = (gl_FragCoord.xy - spriteData.rg) / spriteData.ba;","   // m = x, y percentage for center position within total resolution","   // note: you should know this, but swizzling allows access to vecN data using x,y,z, and w (or r, g, b, and a) in that order.","   vec4 centerPointsData = texture2D(centerPointsTexture, vec2(spriteIndex, 0.5));","   vec2 m = centerPointsData.xy;","   //vec2 m = vec2(0.5);","   // d = difference between p and m (obviously, but see above).","   vec2 d = p - m;","   // The dot function returns the dot product of the two","   // input parameters, i.e. the sum of the component-wise","   // products. If x and y are the same the square root of","   // the dot product is equivalent to the length of the vector.","   // Therefore, r = length of vector represented by d (the ","   // distance of the texel from center position).","   // In order to apply weights here, we add our weight to this distance","   // (pushing it closer to 1 - essentially giving no effect at all) and","   // find the min between our weighted distance and 1.0","   float inverseLenseWeight = 1.0 - lenseWeight;","   float r = min(sqrt(dot(d, d)) + inverseLenseWeight, 1.0);","   vec2 offsetUV = m + (d * r);","   vec2 adjustedFragCoord = spriteData.rg + vec2((spriteData.b * offsetUV.x), (spriteData.a * offsetUV.y));","   //adjustedFragCoord.x = clamp(adjustedFragCoord.x, spriteData.r, (spriteData.r + spriteData.b));","   //adjustedFragCoord.y = clamp(adjustedFragCoord.y, spriteData.g, (spriteData.g + spriteData.a));","   vec2 uv = adjustedFragCoord.xy / aspect;","   // RGB shift","   vec2 offset = vec2(0.0);","   if (r < 1.0) {","     float amount = 0.0013;","     float angle = 0.45;","     offset = (amount * (1.0 - r)) * vec2(cos(angle), sin(angle));","   }","   vec4 cr = texture2D(uSampler, (uv + offset));","   vec4 cga = texture2D(uSampler, uv);","   vec4 cb = texture2D(uSampler, (uv - offset));","   vec4 outColor = vec4(0.0);","   if (cr.r > 0.0 || cga.g > 0.0 || cb.b > 0.0) {","     // Adjust rgb values so that colors with transparency appear as if they were atop an opaque white background.","     // (vec4(0.0, 0.0, 0.0, 0.5) _atop white_ is visibly the same as vec4(0.5, 0.5, 0.5, 0.0))","     if (cr.a != 0.0) {","       cr.r = cr.r + cr.a;","     }","     if (cga.a != 0.0) {","       cga.g = cga.g + cga.a;","     }","     if (cb.b != 0.0) {","       cb.b = cb.b + cb.a;","     }","     // Ensure offseted/shifted texels have alpha similar to the texel they are offsetting","     // (this prevents texel from being invisible if cga.a = vec4(0.0, 0.0, 0.0, 0.0)","     cga.a = max(cga.a, max(cr.a, cb.a));","     // Set alpha adjustment value so that white texels keep their transparency.","   	float alpha = 1.0 - cga.a;","     // Invert colors (this is cheating but optimal) so that we have CMYK rather than RGB","     // shifted colors and the combination of offsets creates a blacker rather than whiter color.","     outColor = vec4((1.0 - cr.r) - alpha, (1.0 - cga.g) - alpha, (1.0 - cb.b) - alpha, cga.a);","   }","   else {","     outColor = vec4(cr.r, cga.g, cb.b, cga.a);","   }","   // Multiply alpha by original spriteIndexData's alpha value.","   // this will be 0 for texels not within any 'sprite' area.","   outColor.a = outColor.a * spriteIndexData.a;","   gl_FragColor = outColor;","}"].join("\n"),u=["varying vec2 vTexCoord;","void main() {","vTexCoord = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\n"),l=function(t,e){this.init.apply(this,arguments)};l.prototype=function(){return{init:function(t,e){this.textDescriber=t,this.mapper=this.createMapper(t,e),this.textKeys=this.mapper.textKeys},prepare:function(t){var e=new THREE.TextureLoader;e.load(this.mapper.url,_.bind(function(e){this.ratio=s;var i=this.mapper.width*this.ratio,r=this.mapper.height*this.ratio;!Detector.webgl,this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(i,r),this.scene=new THREE.Scene,this.camera=new THREE.Camera,this.geometry=new THREE.PlaneGeometry(2,2,0),this.texture=e,this.texture.needsUpdate=!0,this.canvas=this.renderer.domElement,$(this.canvas).css({width:this.mapper.width,height:this.mapper.height}),$(this.canvas).attr({width:i,height:r}),this.spriteIndicesTexture(_.bind(function(e){this.spriteDataTexture(_.bind(function(i){this.centerPointsTexture(_.bind(function(r){this.uniforms={uTime:{type:"f",value:1},uSampler:{type:"t",value:this.texture},spriteIndices:{type:"t",value:e},spriteDataTexture:{type:"t",value:i},centerPointsTexture:{type:"t",value:r},canvasWidth:{type:"f",value:this.canvas.width},canvasHeight:{type:"f",value:this.canvas.height},lenseWeight:{type:"f",value:.9}},this.material=new THREE.ShaderMaterial({vertexShader:u,fragmentShader:p,uniforms:this.uniforms}),this.material.depthTest=!1,this.material.depthWrite=!1,this.mesh=new THREE.Mesh(this.geometry,this.material),this.scene.add(this.mesh),t()},this))},this))},this))},this))},createMapper:function(t,e){return t instanceof Blotter.TextDescription?new d(t,e):void c("blotter_renderer","first argument must be of type Blotter.TextDescription")},start:function(){this.lastDrawTime=Date.now(),this.currentAnimationLoop||this.loop()},spriteIndicesTexture:function(t){var e=.5;this.spriteIndices(_.bind(function(i){var r=new THREE.DataTexture(i,this.mapper.width*e,this.mapper.height*e,THREE.RGBAFormat,THREE.FloatType);r.flipY=!0,r.needsUpdate=!0,t(r)},this),e)},spriteIndices:function(t,e){var e=e||1,r=this.mapper.height*e,n=this.mapper.width*e,a=new Float32Array(r*n*4),o=n%1,s=1/this.mapper.textsKeys.length/2;setTimeout(_.bind(function(){for(i=1;i<a.length/4;i++){var r=Math.ceil(i/(n-o)),h=i-(n-o)*(r-1),c=0,d=0;for(ki=0;ki<this.mapper.textsKeys.length;ki++){var p=this.mapper.texts[this.mapper.textsKeys[ki]],u=p.fit.y*e,l=p.fit.x*e,f=p.h*e,g=p.w*e;if(r>=u&&u+f>=r&&h>=l&&l+g>=h){c=ki/this.mapper.textsKeys.length+s,d=1;break}}var m=i-1;a[4*m+0]=c,a[4*m+1]=c,a[4*m+2]=c,a[4*m+3]=d}t(a)},this),1)},spriteDataTexture:function(t){this.spriteDataArray(_.bind(function(e){var i=new THREE.DataTexture(e,this.mapper.textsKeys.length,1,THREE.RGBAFormat,THREE.FloatType);i.needsUpdate=!0,t(i)},this))},spriteDataArray:function(t){var e=new Float32Array(4*this.mapper.textsKeys.length),i=0;setTimeout(_.bind(function(){$.each(this.mapper.texts,_.bind(function(t,r){e[4*i]=r.fit.x*this.ratio,e[4*i+1]=this.canvas.height-(r.fit.y+r.h)*this.ratio,e[4*i+2]=r.w*this.ratio,e[4*i+3]=r.h*this.ratio,i++},this)),t(e)},this),1)},centerPointsTexture:function(t){this.centerPointsArray(_.bind(function(e){var i=new THREE.DataTexture(e,this.mapper.textsKeys.length,1,THREE.RGBAFormat,THREE.FloatType);i.needsUpdate=!0,t(i)},this))},centerPointsArray:function(t){var e=new Float32Array(4*this.mapper.textsKeys.length),i=0;setTimeout(_.bind(function(){$.each(this.mapper.texts,_.bind(function(t,r){var n=r.w,a=r.h;e[4*i]=this.randomNumberBetween(n/2-n/4,n/2+n/4)/n,e[4*i+1]=this.randomNumberBetween(a/2-a/7,a/2+a/7)/a,e[4*i+2]=0,e[4*i+3]=0,i++},this)),t(e)},this),1)},randomNumberBetween:function(t,e){return Math.random()*(e-t)+t},loop:function(){(Date.now()-this.lastDrawTime)/1e3;this.lastDrawTime=Date.now(),this.renderer.render(this.scene,this.camera),this.currentAnimationLoop=t(_.bind(function(){this.loop()},this))},stop:function(){this.currentAnimationLoop&&(e(this.currentAnimationLoop),this.currentAnimationLoop=void 0)},teardown:function(){this.stop(),this.renderer=null,$(this.canvas).remove()}}}(),this.blotter=r}();